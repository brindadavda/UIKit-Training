// @generated
// This file was automatically generated and should not be edited.

import ApolloAPI

/// Autogenerated input type of CreateRepository
public struct CreateRepositoryInput: InputObject {
  public private(set) var __data: InputDict

  public init(_ data: InputDict) {
    __data = data
  }

  public init(
    clientMutationId: GraphQLNullable<String> = nil,
    name: String,
    ownerId: GraphQLNullable<ID> = nil,
    description: GraphQLNullable<String> = nil,
    visibility: GraphQLEnum<RepositoryVisibility>,
    template: GraphQLNullable<Bool> = nil,
    homepageUrl: GraphQLNullable<URI> = nil,
    hasWikiEnabled: GraphQLNullable<Bool> = nil,
    hasIssuesEnabled: GraphQLNullable<Bool> = nil,
    teamId: GraphQLNullable<ID> = nil
  ) {
    __data = InputDict([
      "clientMutationId": clientMutationId,
      "name": name,
      "ownerId": ownerId,
      "description": description,
      "visibility": visibility,
      "template": template,
      "homepageUrl": homepageUrl,
      "hasWikiEnabled": hasWikiEnabled,
      "hasIssuesEnabled": hasIssuesEnabled,
      "teamId": teamId
    ])
  }

  /// A unique identifier for the client performing the mutation.
  public var clientMutationId: GraphQLNullable<String> {
    get { __data["clientMutationId"] }
    set { __data["clientMutationId"] = newValue }
  }

  /// The name of the new repository.
  public var name: String {
    get { __data["name"] }
    set { __data["name"] = newValue }
  }

  /// The ID of the owner for the new repository.
  public var ownerId: GraphQLNullable<ID> {
    get { __data["ownerId"] }
    set { __data["ownerId"] = newValue }
  }

  /// A short description of the new repository.
  public var description: GraphQLNullable<String> {
    get { __data["description"] }
    set { __data["description"] = newValue }
  }

  /// Indicates the repository's visibility level.
  public var visibility: GraphQLEnum<RepositoryVisibility> {
    get { __data["visibility"] }
    set { __data["visibility"] = newValue }
  }

  /// Whether this repository should be marked as a template such that anyone who can access it can create new repositories with the same files and directory structure.
  public var template: GraphQLNullable<Bool> {
    get { __data["template"] }
    set { __data["template"] = newValue }
  }

  /// The URL for a web page about this repository.
  public var homepageUrl: GraphQLNullable<URI> {
    get { __data["homepageUrl"] }
    set { __data["homepageUrl"] = newValue }
  }

  /// Indicates if the repository should have the wiki feature enabled.
  public var hasWikiEnabled: GraphQLNullable<Bool> {
    get { __data["hasWikiEnabled"] }
    set { __data["hasWikiEnabled"] = newValue }
  }

  /// Indicates if the repository should have the issues feature enabled.
  public var hasIssuesEnabled: GraphQLNullable<Bool> {
    get { __data["hasIssuesEnabled"] }
    set { __data["hasIssuesEnabled"] = newValue }
  }

  /// When an organization is specified as the owner, this ID identifies the team that should be granted access to the new repository.
  public var teamId: GraphQLNullable<ID> {
    get { __data["teamId"] }
    set { __data["teamId"] = newValue }
  }
}
